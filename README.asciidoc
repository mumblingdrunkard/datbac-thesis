= Datbac thesis

This is my thesis, it uses RMarkdown and a very customized pandoc template.

== Compiling this project

You will need a LaTeX environment on your system. If you're on Linux, the
easiest way to accomplish this is to install `texlive-full` or whatever
variation is available for your system. On my system (Fedora 35), the package is
named `texlive-schema-full` and I install it by running
`sudo dnf install texlive-schema-full`.

You will likely also need `pandoc`. On my system, I run
`sudo dnf install pandoc`.

If you happen to be using an older version of pandoc, you may also need
`pandoc-citeproc`.

You will need to have `R` installed on your system as well as a few packages:

.In R: `sudo R`
[source,R]
----
install.packages("rmarkdown")
install.packages("bookdown")
install.packages("kableExtra")
----

It is likely that the final line will give you some errors.

These additional commands should install the missing dependencies:

[source,sh]
----
RUN dnf install libcurl
RUN dnf install libcurl-devel
RUN dnf install libxml2-devel
RUN dnf install openssl
RUN dnf install openssl-devel
----

You should now be able to run `make` from the source directory. The resultant
pdf-file should be generated as `output/_main.pdf`. This does not include the
glossary however. If you want the glossaries, run `make pdf-final`. This
performs two passes over the document to include the glossary list.

== Using Docker

NOTE: For preservation only, not recommended for regular use.

The docker solution is dirty, but in return, it should work on any system.
It uses a lot of space and the image has to be rebuilt for each time the source
is changed. Thanks to caching, only the last 2 commands in the dockerfile
consume much time after the initial image is built.

To minimize time spent on building, it may help to have a cached version of the
image where all the packages are installed:

[source,sh]
----
docker build . --tag base-doc # warning, this takes a very long time
----

As long as this `base-doc` image is kept, future runs of `docker build` should
take much less time.

[source,sh]
----
docker build . --tag tmp    # warning, this takes a very long time on first run.
docker run tmp > output.pdf
docker image rm --force tmp # have to rebuild image when source is changed.
----
